// Create a flutter app to demonstrate the following:
A. Quantity Validation: should not accept negative numbers
B. Price validation should not accept negative numbers
C. The author and book name field should only accept characters from ‘A’ to ‘Z’ or
‘a’ to ‘z’. //



import 'package:flutter/material.dart';

void main() {
  runApp(MyBookApp());
}

class MyBookApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Book Entry Form',
      home: BookForm(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class BookForm extends StatefulWidget {
  @override
  _BookFormState createState() => _BookFormState();
}

class _BookFormState extends State<BookForm> {
  final _formKey = GlobalKey<FormState>();
  final _authorController = TextEditingController();
  final _bookNameController = TextEditingController();
  final _quantityController = TextEditingController();
  final _priceController = TextEditingController();

  void _submitForm() {
    if (_formKey.currentState!.validate()) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Form Submitted Successfully!'),
          backgroundColor: Colors.green,
        ),
      );
    }
  }

  String? _validateAlphabet(String? value, String fieldName) {
    if (value == null || value.isEmpty) {
      return '$fieldName is required';
    } else if (!RegExp(r'^[a-zA-Z\s]+$').hasMatch(value)) {
      return '$fieldName must contain only letters';
    }
    return null;
  }

  String? _validatePositiveNumber(String? value, String fieldName) {
    if (value == null || value.isEmpty) {
      return '$fieldName is required';
    }
    final number = double.tryParse(value);
    if (number == null || number < 0) {
      return '$fieldName must be a non-negative number';
    }
    return null;
  }

  @override
  void dispose() {
    _authorController.dispose();
    _bookNameController.dispose();
    _quantityController.dispose();
    _priceController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Book Entry Form')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: SingleChildScrollView(
            child: Column(
              children: [
                // Author Name
                TextFormField(
                  controller: _authorController,
                  decoration: InputDecoration(labelText: 'Author Name'),
                  validator: (value) => _validateAlphabet(value, 'Author Name'),
                ),
                SizedBox(height: 16),

                // Book Name
                TextFormField(
                  controller: _bookNameController,
                  decoration: InputDecoration(labelText: 'Book Name'),
                  validator: (value) => _validateAlphabet(value, 'Book Name'),
                ),
                SizedBox(height: 16),

                // Quantity
                TextFormField(
                  controller: _quantityController,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(labelText: 'Quantity'),
                  validator: (value) => _validatePositiveNumber(value, 'Quantity'),
                ),
                SizedBox(height: 16),

                // Price
                TextFormField(
                  controller: _priceController,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(labelText: 'Price'),
                  validator: (value) => _validatePositiveNumber(value, 'Price'),
                ),
                SizedBox(height: 24),

                ElevatedButton(
                  onPressed: _submitForm,
                  child: Text('Submit'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
